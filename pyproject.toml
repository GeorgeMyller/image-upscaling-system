[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "image-upscaling-system"
version = "1.0.0"
description = "Sistema completo para upscaling e melhoria de qualidade de imagens usando diferentes tÃ©cnicas"
authors = [
    {name = "George Myller Souza", email = "george.myller@gmail.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["image", "upscaling", "ai", "computer-vision", "streamlit"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

requires-python = ">=3.8"
dependencies = [
    "streamlit>=1.28.0",
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
ai = [
    "py-real-esrgan>=0.4.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    "diffusers>=0.20.0",
]
waifu2x = [
    "waifu2x-python>=1.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/GeorgeMyller/image-upscaling-system"
Repository = "https://github.com/GeorgeMyller/image-upscaling-system"
Documentation = "https://github.com/GeorgeMyller/image-upscaling-system/blob/main/README.md"
Issues = "https://github.com/GeorgeMyller/image-upscaling-system/issues"

[project.scripts]
upscaling-app = "run_app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["apps*", "modules*", "tests*"]
exclude = ["__pycache__*", "*.pyc", "build*", "dist*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
