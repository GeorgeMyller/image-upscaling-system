"""
Script de teste para verificar a funcionalidade dos modelos de upscaling
"""

import sys
import os
from PIL import Image
import tempfile

# Testar importa√ß√µes
print("üîç Testando importa√ß√µes dos modelos...")

# 1. Classic PIL + OpenCV
try:
    from upscaling_realce_pillow_opencv import upscale_and_enhance_pil
    print("‚úÖ Classic PIL + OpenCV: Dispon√≠vel")
    classic_available = True
except ImportError as e:
    print(f"‚ùå Classic PIL + OpenCV: {e}")
    classic_available = False

# 2. Smart Upscaling
try:
    from upscaling_smart import upscale_and_enhance_smart, is_enhanced_upscaling_available
    smart_available = is_enhanced_upscaling_available()
    print(f"‚úÖ Smart Upscaling: {'Dispon√≠vel' if smart_available else 'Parcialmente dispon√≠vel'}")
except ImportError as e:
    print(f"‚ùå Smart Upscaling: {e}")
    smart_available = False

# 3. Waifu2x
try:
    from upscaling_waifu2x import upscale_and_enhance_waifu2x, is_waifu2x_available
    waifu2x_available = is_waifu2x_available()
    print(f"‚úÖ Waifu2x: {'Dispon√≠vel' if waifu2x_available else 'N√£o dispon√≠vel'}")
except ImportError as e:
    print(f"‚ùå Waifu2x: {e}")
    waifu2x_available = False

# 4. Real-ESRGAN Original
try:
    from upscaling_realce_realesrgan import upscale_and_enhance_realesrgan, is_realesrgan_available
    realesrgan_original_available = is_realesrgan_available()
    print(f"‚úÖ Real-ESRGAN Original: {'Dispon√≠vel' if realesrgan_original_available else 'N√£o dispon√≠vel'}")
except ImportError as e:
    print(f"‚ùå Real-ESRGAN Original: {e}")
    realesrgan_original_available = False

# 5. Real-ESRGAN New
try:
    from upscaling_realce_realesrgan_new import upscale_and_enhance_realesrgan as realesrgan_new
    print("‚úÖ Real-ESRGAN New: Dispon√≠vel")
    realesrgan_new_available = True
except ImportError as e:
    print(f"‚ùå Real-ESRGAN New: {e}")
    realesrgan_new_available = False

# 6. HuggingFace Real-ESRGAN
try:
    from upscaling_realce_huggingface import upscale_and_enhance_realesrgan as realesrgan_hf
    print("‚úÖ Real-ESRGAN HuggingFace: Dispon√≠vel")
    realesrgan_hf_available = True
except ImportError as e:
    print(f"‚ùå Real-ESRGAN HuggingFace: {e}")
    realesrgan_hf_available = False

print("\n" + "="*50)
print("üìä RESUMO DOS MODELOS DISPON√çVEIS:")
print("="*50)

available_count = 0
total_count = 6

if classic_available:
    print("‚úÖ Classic PIL + OpenCV")
    available_count += 1
else:
    print("‚ùå Classic PIL + OpenCV")

if smart_available:
    print("‚úÖ Smart Upscaling")
    available_count += 1
else:
    print("‚ùå Smart Upscaling")

if waifu2x_available:
    print("‚úÖ Waifu2x")
    available_count += 1
else:
    print("‚ùå Waifu2x")

if realesrgan_original_available:
    print("‚úÖ Real-ESRGAN Original")
    available_count += 1
else:
    print("‚ùå Real-ESRGAN Original")

if realesrgan_new_available:
    print("‚úÖ Real-ESRGAN New")
    available_count += 1
else:
    print("‚ùå Real-ESRGAN New")

if realesrgan_hf_available:
    print("‚úÖ Real-ESRGAN HuggingFace")
    available_count += 1
else:
    print("‚ùå Real-ESRGAN HuggingFace")

print(f"\nüéØ {available_count}/{total_count} modelos dispon√≠veis")

# Teste r√°pido com o m√©todo classic se dispon√≠vel
if classic_available:
    print("\nüß™ Testando m√©todo Classic com imagem de teste...")
    try:
        # Criar imagem de teste
        test_image = Image.new('RGB', (50, 50), color='red')
        
        # Testar upscaling
        result = upscale_and_enhance_pil(test_image, scale_factor=2)
        
        print(f"‚úÖ Teste bem-sucedido! Tamanho original: {test_image.size}, Upscaled: {result.size}")
        
    except Exception as e:
        print(f"‚ùå Teste falhou: {e}")

print("\nüöÄ Para executar o app Streamlit unificado:")
print("streamlit run app_upscaling_unified.py")
